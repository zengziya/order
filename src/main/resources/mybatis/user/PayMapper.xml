<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.order.mapper.PayMapper">
  <resultMap id="BaseResultMap" type="com.bdqn.order.pojo.Pay">
    <id column="pay_id" jdbcType="INTEGER" property="payId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="pay_before" jdbcType="DECIMAL" property="payBefore" />
    <result column="pay_after" jdbcType="DECIMAL" property="payAfter" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
  </resultMap>
  <sql id="Base_Column_List">
    pay_id, user_id, order_id, pay_before, pay_after, pay_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wm_order_pay
    where pay_id = #{payId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wm_order_pay
    where pay_id = #{payId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bdqn.order.pojo.Pay">
    insert into wm_order_pay (pay_id, user_id, order_id,
      pay_before, pay_after, pay_time
      )
    values (#{payId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{payBefore,jdbcType=DECIMAL}, #{payAfter,jdbcType=DECIMAL}, #{payTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bdqn.order.pojo.Pay">
    insert into wm_order_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        pay_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payBefore != null">
        pay_before,
      </if>
      <if test="payAfter != null">
        pay_after,
      </if>
        pay_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payId != null">
        #{payId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="payBefore != null">
        #{payBefore,jdbcType=DECIMAL},
      </if>
      <if test="payAfter != null">
        #{payAfter,jdbcType=DECIMAL},
      </if>
        now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bdqn.order.pojo.Pay">
    update wm_order_pay
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="payBefore != null">
        pay_before = #{payBefore,jdbcType=DECIMAL},
      </if>
      <if test="payAfter != null">
        pay_after = #{payAfter,jdbcType=DECIMAL},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pay_id = #{payId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.order.pojo.Pay">
    update wm_order_pay
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      pay_before = #{payBefore,jdbcType=DECIMAL},
      pay_after = #{payAfter,jdbcType=DECIMAL},
      pay_time = #{payTime,jdbcType=TIMESTAMP}
    where pay_id = #{payId,jdbcType=INTEGER}
  </update>
</mapper>